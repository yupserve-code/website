<?phprequire_once "../../objects/class_connection.php";require_once "../../class_configure.php";// API configrequire_once "../config.php";// API headerrequire_once "../header.php";require_once "../../objects/class_setting.php";require_once "../../objects/class_general.php";require_once "../../objects/class_users.php";require_once "../../objects/class_order_client_info.php";require_once "../../objects/class_coupon.php";require_once "../../objects/class_frequently_discount.php";require_once "../../objects/class_payments.php";require_once "../../objects/class_front_first_step.php";require_once "../../objects/class_booking.php";require_once "../../objects/class_payment_hook.php";require_once "../../objects/class_services.php";require_once "../../objects/class_email_template.php";require_once "../../objects/class_adminprofile.php";require_once "../../objects/plivo.php";require_once "../../assets/twilio/Services/Twilio.php";require_once "../../objects/class_dashboard.php";require_once "../../objects/class_nexmo.php";require_once "../../objects/class_gc_hook.php";require_once "../../objects/class.phpmailer.php";/* * request_booking.php * Request Booking */class Request_Booking {    public function __construct() {            }    public function index() {		header('Content-Type: application/json; charset=utf-8');		header('Cache-Control: no-cache');        $json = array();        if (!empty($_SERVER['REQUEST_METHOD']) && ($_SERVER['REQUEST_METHOD'] == "POST")) {            if (!empty($_POST['customer_id']) && !empty($_POST['date']) && !empty($_POST['time_slot']) && !empty($_POST['service_id']) && !empty($_POST['sub_service_id']) && !empty($_POST['address']) && !empty($_POST['pincode']) && !empty($_POST['city']) && !empty($_POST['state'])) {			/*                $header = new API_Header();                // API Token                $token = $header->get_auth_request_header_key();                $config = new API_Config();                // Check valid API call from valid resource                if ($config->check_valid_api_call(trim($token))) {			*/                    // Database                    $database = new cleanto_db();                    $conn = $database->connect();                    $database->conn = $conn;                    // Dashboard                    $objdashboard = new cleanto_dashboard();                    $objdashboard->conn = $conn;                    // Admin                     $objadminprofile = new cleanto_adminprofile();                    $objadminprofile->conn = $conn;                    // Google calendar                    $gc_hook = new cleanto_gcHook();                    $gc_hook->conn = $conn;                    // Nexmo for SMS                    $nexmo_admin = new cleanto_ct_nexmo();                    $nexmo_client = new cleanto_ct_nexmo();                    // First step                    $first_step = new cleanto_first_step();                    $first_step->conn = $conn;                    // Email                    $email_template = new cleanto_email_template();                    $email_template->conn = $conn;                    // General                    $general = new cleanto_general();                    $general->conn = $conn;                    // User                    $user = new cleanto_users();                    $user->conn = $conn;                    // Order client                    $order_client_info = new cleanto_order_client_info();                    $order_client_info->conn = $conn;                    // Settings                    $settings = new cleanto_setting();                    $settings->conn = $conn;                    // Coupon                    $coupon = new cleanto_coupon();                    $coupon->conn = $conn;                    // Booking                    $booking = new cleanto_booking();                    $booking->conn = $conn;                    // Frequent discount                    $frequently_discount = new cleanto_frequently_discount();                    $frequently_discount->conn = $conn;                    // Payments                    $payment = new cleanto_payments();                    $payment->conn = $conn;                    // Services                    $service = new cleanto_services();                    $service->conn = $conn;                    $base_url = isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) == 'on' ? 'https' : 'http';                    $base_url .= '://' . $_SERVER['HTTP_HOST'] . '/';                    // POST Form data                    $customer_id = trim($_POST['customer_id']);                    $booking_date = trim($_POST['date']);                    $time_slot = trim($_POST['time_slot']);                    $service_id = trim($_POST['service_id']);                    $sub_service_ids = (array) json_decode($_POST['sub_service_id'], true);                    $address = trim($_POST['address']);                    $pincode = trim($_POST['pincode']);                    $state = trim($_POST['state']);                    $city = trim($_POST['city']);                    date_default_timezone_set('Asia/Kolkata');                    // Check service is available in the given pincode                    $sql_srv_avl = "SELECT * FROM ct_settings WHERE option_name='ct_postal_code' AND FIND_IN_SET(" . $pincode . ", postalcode)";                    $result = mysqli_query($conn, $sql_srv_avl);                    if (mysqli_num_rows($result) < 1) {                        $json['error']['message'] = "Service not available in this pincode";                    }                    if (empty($json['error'])) {                        $appointment_auto_confirm = $settings->get_option('ct_appointment_auto_confirm_status');                        $last_order_id = $booking->last_booking_id();                        $symbol_position = $settings->get_option('ct_currency_symbol_position');                        $decimal = $settings->get_option('ct_price_format_decimal_places');                        $company_email = $settings->get_option('ct_email_sender_address');                        $company_name = $settings->get_option('ct_email_sender_name');                        $vc_status = '';                        if ($vc_status == "Y") {                            $vc_status_v = "Yes";                        } else if ($vc_status == "N") {                            $vc_status_v = "No";                        } else {                            $vc_status_v = "N/A";                        }                        $p_status = '';                        if ($p_status == "Y") {                            $p_status_v = "Yes";                        } elseif ($p_status == "N") {                            $p_status_v = "No";                        } else {                            $p_status_v = "N/A";                        }                        $contact_status_cont = '';                        if ($contact_status_cont == "") {                            $contact_status_cont = "N/A";                        }                        $contact_status = '';                        if ($settings->get_option('ct_smtp_authetication') == 'true') {                            $mail_SMTPAuth = '1';                            if ($settings->get_option('ct_smtp_hostname') == "smtp.gmail.com") {                                $mail_SMTPAuth = 'Yes';                            }                        } else {                            $mail_SMTPAuth = '0';                            if ($settings->get_option('ct_smtp_hostname') == "smtp.gmail.com") {                                $mail_SMTPAuth = 'No';                            }                        }                        $mail = new cleanto_phpmailer();                        $mail->Host = $settings->get_option('ct_smtp_hostname');                        $mail->Username = $settings->get_option('ct_smtp_username');                        $mail->Password = $settings->get_option('ct_smtp_password');                        $mail->Port = $settings->get_option('ct_smtp_port');                        $mail->SMTPSecure = $settings->get_option('ct_smtp_encryption');                        /* $mail->SMTPAuth = $settings->get_option('ct_smtp_authetication'); */                        $mail->SMTPAuth = $mail_SMTPAuth;                        $mail_a = new cleanto_phpmailer();                        $mail_a->Host = $settings->get_option('ct_smtp_hostname');                        $mail_a->Username = $settings->get_option('ct_smtp_username');                        $mail_a->Password = $settings->get_option('ct_smtp_password');                        $mail_a->Port = $settings->get_option('ct_smtp_port');                        $mail_a->SMTPSecure = $settings->get_option('ct_smtp_encryption');                        /* $mail->SMTPAuth = $settings->get_option('ct_smtp_authetication'); */                        $mail_a->SMTPAuth = $mail_SMTPAuth;                        /* NEXMO SMS GATEWAY VARIABLES */                        $nexmo_admin->ct_nexmo_api_key = $settings->get_option('ct_nexmo_api_key');                        $nexmo_admin->ct_nexmo_api_secret = $settings->get_option('ct_nexmo_api_secret');                        $nexmo_admin->ct_nexmo_from = $settings->get_option('ct_nexmo_from');                        $nexmo_client->ct_nexmo_api_key = $settings->get_option('ct_nexmo_api_key');                        $nexmo_client->ct_nexmo_api_secret = $settings->get_option('ct_nexmo_api_secret');                        $nexmo_client->ct_nexmo_from = $settings->get_option('ct_nexmo_from');                        /* SMS GATEWAY VARIABLES */                        $plivo_sender_number = $settings->get_option('ct_sms_plivo_sender_number');                        $twilio_sender_number = $settings->get_option('ct_sms_twilio_sender_number');                        /* textlocal gateway variables */                        $textlocal_username = $settings->get_option('ct_sms_textlocal_account_username');                        $textlocal_hash_id = $settings->get_option('ct_sms_textlocal_account_hash_id');                        /* NEED VARIABLE FOR EMAIL */                        $company_city = $settings->get_option('ct_company_city');                        $company_state = $settings->get_option('ct_company_state');                        $company_zip = $settings->get_option('ct_company_zip_code');                        $company_country = $settings->get_option('ct_company_country');                        $company_phone = strlen($settings->get_option('ct_company_phone')) < 6 ? "" : $settings->get_option('ct_company_phone');                        /* $company_email = $settings->get_option('ct_company_email'); */                        $company_address = $settings->get_option('ct_company_address');                        /** * complete checkout code ** */                        /*  set admin name */                        $get_admin_name_result = $objadminprofile->readone_adminname();                        $get_admin_name = $get_admin_name_result[3];                        if ($get_admin_name == "") {                            $get_admin_name = "Admin";                        }                        $admin_email = $settings->get_option('ct_admin_optional_email');                        /* set admin name */                        /* set business logo and logo alt */                        if ($settings->get_option('ct_company_logo') != null && $settings->get_option('ct_company_logo') != "") {                            $business_logo = $base_url . 'assets/images/services/' . $settings->get_option('ct_company_logo');                            $business_logo_alt = $settings->get_option('ct_company_name');                        } else {                            $business_logo = '';                            $business_logo_alt = $settings->get_option('ct_company_name');                        }                        /* set business logo and logo alt */                        // Discount                        $freq_discount = 1;                        // last order ID                        if ($last_order_id == '0' || $last_order_id == null) {                            $orderid = 1000;                        } else {                            $orderid = $last_order_id + 1;                        }                        // INSERT into bookings table                        $booking->order_id = $orderid;                        $booking->client_id = $customer_id;                        $booking->order_date = date('Y-m-d H:i:s', time());                        $booking->booking_date_time = $booking_date . " " . $time_slot;                        $booking->service_id = $service_id;                        $booking->method_id = 0;                        $booking->method_unit_id = 0;                        $booking->method_unit_qty = 0;                        $booking->method_unit_qty_rate = 0;                        if ($appointment_auto_confirm == "Y") {                            $booking->booking_status = 'C';                        } else {                            $booking->booking_status = 'A';                        }                        $booking->reminder_status = 0;                        $booking->lastmodify = date('Y-m-d H:i:s', time());                        $booking->read_status = 'U';                        //$booking->staff_id = $staff_id;                        $booking->add_booking();                        /* INSERT into addons bookings table */                        foreach ($sub_service_ids as $sub_service) {                            $booking->order_id = $orderid;                            $booking->service_id = $service_id;                            $booking->addons_service_id = $sub_service['sub_service_id'];                            $booking->addons_service_qty = 1;                            $booking->addons_service_rate = 0;                            $booking->add_addons_booking();                        }                        // ISNERT into order client info                        $sql_client = "SELECT * FROM ct_users WHERE id='{$customer_id}'";                        $res_client = mysqli_query($conn, $sql_client);                        $row_client = mysqli_fetch_object($res_client);                        $order_client_info->order_id = $orderid;                        $order_client_info->client_name = ucwords($row_client->first_name) . ' ' . ucwords($row_client->last_name);                        $order_client_info->client_email = $row_client->user_email;                        $order_client_info->client_phone = $row_client->phone;                        $order_client_info->order_duration = 30;                        $order_client_info->client_personal_info = base64_encode(serialize(array('zip' => $pincode, 'address' => $address, 'city' => $city, 'state' => $state, 'notes' => '', 'vc_status' => $vc_status, 'p_status' => $p_status, 'contact_status' => $contact_status)));                        $order_client_info->add_order_client();                        $current_time = date('Y-m-d H:i:s', time());                        // INSERT into order status history table                        $sql_ord_stat = "INSERT INTO ct_booking_status_history (order_id, user_id, status, created_at) VALUES ('{$orderid}', '{$customer_id}', 'A', '{$current_time}')";                        mysqli_query($conn, $sql_ord_stat);                        // INSERT into task booking history                        $sql_ins_stat = "INSERT INTO ct_booking_task_history (order_id, staff_id, customer_id, status, created_at) VALUES ('{$orderid}', '0', '{$customer_id}', 'Service appointment has been booked for #{$orderid}', '{$current_time}')";                        mysqli_query($conn, $sql_ins_stat);                        // INSERT into admin notification                        $sql_adm_notificantion = "INSERT INTO ct_admin_notification (order_id, text, created_at) VALUES ('{$orderid}', 'Service appointment has been booked for #{$orderid}', '{$current_time}')";                        mysqli_query($conn, $sql_adm_notificantion);                        /* Add Booking in Google Calender */                        if ($gc_hook->gc_purchase_status() == 'exist') {                            echo $gc_hook->gc_add_booking_ajax_hook();                            echo $gc_hook->gc_add_staff_booking_ajax_hook();                        }                        /* End Add Booking in Google Calender */                        /* * * Email Code Start ** */                        $admin_infoo = $order_client_info->readone_for_email();                        for ($i = 0; $i < (count($sub_service_ids)); $i++) {                            $service->id = $service_id;                            $service_name = $service->get_service_name_for_mail();                            /* methods */                            $units = "None";                            $methodname = "None";                            $hh = $booking->get_methods_ofbookings($orderid);                            $count_methods = mysqli_num_rows($hh);                            $hh1 = $booking->get_methods_ofbookings($orderid);                            if ($count_methods > 0) {                                while ($jj = mysqli_fetch_array($hh1)) {                                    if ($units == "None") {                                        $units = $jj['units_title'] . "-" . $jj['qtys'];                                    } else {                                        $units = $units . "," . $jj['units_title'] . "-" . $jj['qtys'];                                    }                                    $methodname = $jj['method_title'];                                }                            }                            /* ADDONS */                            $addons = "None";                            $hh = $booking->get_addons_ofbookings($orderid);                            while ($jj = mysqli_fetch_array($hh)) {                                if ($addons == "None") {                                    $addons = $jj['addon_service_name'] . "-" . $jj['addons_service_qty'];                                } else {                                    $addons = $addons . "," . $jj['addon_service_name'] . "-" . $jj['addons_service_qty'];                                }                            }                        }                        if ($company_name == "") {                            $company_name = $settings->get_option('ct_company_name');                        }                        $setting_date_format = $settings->get_option('ct_date_picker_date_format');                        $setting_time_format = $settings->get_option('ct_time_format');                        $booking_date = $booking_date . " " . $time_slot;                        $price = 0;                        $c_address = $address;                        $client_city = $city;                        $client_state = $state;                        $client_zip = $pincode;                        $client_email = $row_client->user_email;                        $subject = ucwords($service_name) . " on " . $booking_date;                        if ($admin_email == "") {                            $admin_email = $admin_infoo['email'];                        }                        if ($vc_status == "Y") {                            $vc_status_v = "Yes";                        } else if ($vc_status == "N") {                            $vc_status_v = "No";                        } else {                            $vc_status_v = "N/A";                        }                        if ($p_status == "Y") {                            $p_status_v = "Yes";                        } elseif ($p_status == "N") {                            $p_status_v = "No";                        } else {                            $p_status_v = "N/A";                        }                        // INSERT into admin notification                        $sql_adm_not = "INSERT INTO ct_admin_notification (order_id, text, created_at) VALUES ('{$orderid}', 'Service appointment has been booked for ID #{$orderid}', '{$current_time}')";                        mysqli_query($conn, $sql_adm_not);                        if ($appointment_auto_confirm == "Y") {                            $email_template->email_template_type = 'C';                        } else {                            $email_template->email_template_type = 'A';                        }                        /* $email_template->email_template_type = 'A'; */                        $clientemailtemplate = $email_template->readone_client_email_template();                        if ($clientemailtemplate['email_message'] != '') {                            $clienttemplate = base64_decode($clientemailtemplate['email_message']);                        } else {                            $clienttemplate = base64_decode($clientemailtemplate['default_message']);                        }                        if ($appointment_auto_confirm == "Y") {                            $email_template->email_template_type = 'C';                        } else {                            $email_template->email_template_type = 'A';                        }                        $adminemailtemplate = $email_template->readone_admin_email_template();                        if ($adminemailtemplate['email_message'] != '') {                            $admintemplate = base64_decode($adminemailtemplate['email_message']);                        } else {                            $admintemplate = base64_decode($adminemailtemplate['default_message']);                        }                        $client_phone_info = "";                        $client_phone_no = "";                        $client_phone_length = "";                        $client_first_name = "";                        $client_last_name = "";                        $client_fname = "";                        $client_lname = "";                        $email_notes = "";                        $client_notes = "";                        $client_phone_no = $row_client->phone;                        $client_phone_length = strlen($client_phone_no);                        if ($client_phone_length > 6) {                            $client_phone_info = $client_phone_no;                        } else {                            $client_phone_info = "N/A";                        }                        $client_first_name = ucwords(stripslashes($row_client->first_name));                        $client_last_name = ucwords(stripslashes($row_client->last_name));                        if ($client_first_name == "" && $client_last_name == "") {                            $client_fname = "User";                            $client_lname = "";                            $client_name = $client_fname . ' ' . $client_lname;                        } elseif ($client_first_name != "" && $client_last_name != "") {                            $client_fname = $client_first_name;                            $client_lname = $client_last_name;                            $client_name = $client_fname . ' ' . $client_lname;                        } elseif ($client_first_name != "") {                            $client_fname = $client_first_name;                            $client_lname = "";                            $client_name = $client_fname . ' ' . $client_lname;                        } elseif ($client_last_name != "") {                            $client_fname = "";                            $client_lname = $client_last_name;                            $client_name = $client_fname . ' ' . $client_lname;                        }                        $notes = '';                        $client_notes = stripslashes($notes);                        if ($client_notes == "") {                            $client_notes = "N/A";                        }                        $contact_status_cont = '';                        if ($contact_status_cont == "") {                            $contact_status_cont = "N/A";                        }                        $booking_time = date("h:i A", strtotime($time_slot));                        $payment_method = ucwords('pay at venue');                        $searcharray = array('{{service_name}}', '{{booking_date}}', '{{order_id}}', '{{business_logo}}', '{{business_logo_alt}}', '{{client_name}}', '{{addons}}', '{{firstname}}', '{{lastname}}', '{{client_email}}', '{{phone}}', '{{admin_name}}', '{{address}}', '{{company_name}}', '{{booking_time}}', '{{client_city}}', '{{client_state}}', '{{client_zip}}', '{{company_city}}', '{{company_state}}', '{{company_zip}}', '{{company_country}}', '{{company_phone}}', '{{company_email}}', '{{company_address}}', '{{admin_name}}');                        $replacearray = array($service_name, $booking_date, $orderid, $business_logo, $business_logo_alt, stripslashes($client_name), $addons, $client_fname, $client_lname, $client_email, $client_phone_info, $get_admin_name, stripslashes($c_address), $company_name, $booking_time, stripslashes($client_city), stripslashes($client_state), $client_zip, stripslashes($company_city), stripslashes($company_state), $company_zip, $company_country, $company_phone, $company_email, stripslashes($company_address), stripslashes($get_admin_name));//                        $searcharray = array('{{service_name}}', '{{booking_date}}', '{{business_logo}}', '{{business_logo_alt}}', '{{client_name}}', '{{methodname}}', '{{units}}', '{{addons}}', '{{firstname}}', '{{lastname}}', '{{client_email}}', '{{phone}}', '{{payment_method}}', '{{vaccum_cleaner_status}}', '{{parking_status}}', '{{notes}}', '{{contact_status}}', '{{admin_name}}', '{{price}}', '{{address}}', '{{app_remain_time}}', '{{reject_status}}', '{{company_name}}', '{{booking_time}}', '{{client_city}}', '{{client_state}}', '{{client_zip}}', '{{company_city}}', '{{company_state}}', '{{company_zip}}', '{{company_country}}', '{{company_phone}}', '{{company_email}}', '{{company_address}}', '{{admin_name}}');////                        $replacearray = array($service_name, $booking_date, $business_logo, $business_logo_alt, stripslashes($client_name), $methodname, $units, $addons, $client_fname, $client_lname, $client_email, $client_phone_info, $payment_method, $vc_status_v, $p_status_v, $client_notes, $contact_status_cont, $get_admin_name, $price, stripslashes($c_address), '', '', $company_name, $booking_time, stripslashes($client_city), stripslashes($client_state), $client_zip, stripslashes($company_city), stripslashes($company_state), $company_zip, $company_country, $company_phone, $company_email, stripslashes($company_address), stripslashes($get_admin_name));                        if ($settings->get_option('ct_client_email_notification_status') == 'Y' && $clientemailtemplate['email_template_status'] == 'E') {                            $client_email_body = str_replace($searcharray, $replacearray, $clienttemplate);                            if ($settings->get_option('ct_smtp_hostname') != '' && $settings->get_option('ct_email_sender_name') != '' && $settings->get_option('ct_email_sender_address') != '' && $settings->get_option('ct_smtp_username') != '' && $settings->get_option('ct_smtp_password') != '' && $settings->get_option('ct_smtp_port') != '') {                                $mail->IsSMTP();                            } else {                                $mail->IsMail();                            }                            $mail->SMTPDebug = 0;                            $mail->IsHTML(true);                            $mail->From = $company_email;                            $mail->FromName = $company_name;                            $mail->Sender = $company_email;                            $mail->AddAddress($client_email, $client_name);                            $mail->Subject = $subject;                            $mail->Body = $client_email_body;                            $mail->send();                            $mail->ClearAllRecipients();                        }                        if ($settings->get_option('ct_admin_email_notification_status') == 'Y' && $adminemailtemplate['email_template_status'] == 'E') {                            $admin_email_body = str_replace($searcharray, $replacearray, $admintemplate);                            if ($settings->get_option('ct_smtp_hostname') != '' && $settings->get_option('ct_email_sender_name') != '' && $settings->get_option('ct_email_sender_address') != '' && $settings->get_option('ct_smtp_username') != '' && $settings->get_option('ct_smtp_password') != '' && $settings->get_option('ct_smtp_port') != '') {                                $mail_a->IsSMTP();                            } else {                                $mail_a->IsMail();                            }                            $mail_a->SMTPDebug = 0;                            $mail_a->IsHTML(true);                            $mail_a->From = $company_email;                            $mail_a->FromName = $company_name;                            $mail_a->Sender = $company_email;                            $mail_a->AddAddress($admin_email, $get_admin_name);                            $mail_a->Subject = $subject;                            $mail_a->Body = $admin_email_body;                            $mail_a->send();                            $mail_a->ClearAllRecipients();                        }                        /* * * Email Code End ** */                        $json['success']['booking_details'] = array(                            'order_id' => $orderid,                            'message' => "Request booked successfully"                        );                    }				/*	                } else {                    $json['error']['message'] = "Not authorized to access the API";                }				*/            } else {                $json['error']['message'] = "Parameters are missing";            }        } else {            $json['error']['message'] = "The request type is not allowed";        }        echo json_encode($json);    }}$booking = new Request_Booking();$booking->index();